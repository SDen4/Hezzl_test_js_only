// win combination for 5x5
let arrWin5x5 = [
    [0, 1, 2, 3, 4],
    [5, 6, 7, 8, 9],
    [10, 11, 12, 13, 14],
    [15, 16, 17, 18, 19],
    [20, 21, 22, 23, 24],
    [0, 5, 10, 15, 20],
    [1, 6, 11, 16, 21],
    [2, 7, 12, 17, 22],
    [3, 8, 13, 18, 23],
    [4, 9, 14, 19, 24],
    [0, 6, 12, 18, 24],
    [4, 8, 12, 16, 20]
];


// win combination for 8x8
let arrWin8x8 = [];

let arrHor = [];
let y = [0, 8, 16, 24, 32, 40, 48, 56];

for (let z = 0; z<y.length; z++) {
  for (let i = y[z]; i<y[z]+4; i++) {
      arrHor[i] = [];
      for (let j = 0; j<5; j++) {
        arrHor[i].push(j + i);
      }
  }
}

let arrVer = [];
let x = [0, 1, 2, 3, 4, 5, 6, 7];

for (let z = 0; z<x.length; z++) {
  for (let i = 0; i<32; i++) {
    arrVer[i] = [];
    for (let j = 0; j<5; j++) {
      arrVer[i].push(j*8 + i);
    }
  }
}

let arrDia = [
  [32, 25, 18, 11, 4],
  [40, 33, 26, 19, 12],
  [33, 26, 19, 12, 5],
  [48, 41, 34, 27, 20],
  [41, 34, 27, 20, 13],
  [34, 27, 20, 13, 6],
  [56, 49, 42, 35, 28],
  [49, 42, 35, 28, 21],
  [42, 35, 28, 21, 14],
  [35, 28, 21, 14, 7],
  [57, 50, 43, 36, 29],
  [50, 43, 36, 29, 22],
  [43, 36, 29, 22, 15],
  [58, 51, 44, 37, 30],
  [51, 44, 37, 30, 23],
  [59, 52, 45, 38, 31],
  [24, 33, 42, 51, 60],
  [16, 25, 34, 43, 52],
  [25, 34, 43, 52, 61],
  [8, 17, 26, 35, 44],
  [17, 26, 35, 44, 53],
  [26, 35, 44, 53, 62],
  [0, 9, 18, 27, 36],
  [9, 18, 27, 36, 45],
  [18, 27, 36, 45, 54],
  [27, 36, 45, 54, 63],
  [1, 10, 19, 28, 37],
  [10, 19, 28, 37, 46],
  [19, 28, 37, 46, 55],
  [2, 11, 20, 29, 38],
  [11, 20, 29, 38, 47],
  [3, 12, 21, 30, 39]
];

for (let i=0; i<arrHor.length; i++) {
  if (arrHor[i] != undefined) {
    arrWin8x8.push(arrHor[i]);
  } 
};

for (let i=0; i<arrVer.length; i++) {
    arrWin8x8.push(arrVer[i]);
};

for (let i=0; i<arrDia.length; i++) {
    arrWin8x8.push(arrDia[i]);
};


export {arrWin8x8, arrWin5x5};